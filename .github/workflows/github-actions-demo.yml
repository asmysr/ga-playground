name: Github Actions Playground POC

on:
  workflow_dispatch:

jobs:
  deploy-production:
      environment: production
      name: Deploy Production (main)
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main' # this deploys to different projects since it is production
      steps:
        - uses: actions/checkout@v3
        - uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
              urd:
                - 'urd/**'
              netsuite:
                - 'netsuite/**'

        - name: Install Serverless Framework
          run: npm i -g serverless
        
        - name: Install GCP Cloud Functions Serverless Plug-In
          run: serverless plugin install -n serverless-google-cloudfunctions

        - name: Configure netsuite Serverless Project ID
          if: steps.filter.outputs.netsuite == 'true'
          run: |
            cd ./netsuite
            cat >> project.yml << EOF
            ${{ secrets.GCP_NETSUITE_PROJECTID_PROD }}
            EOF

        - name: Deploy netsuite to GCF
          if: steps.filter.outputs.netsuite == 'true'
          run: |
            cd ./netsuite
            cat >> credentials.json << EOF
            ${{ secrets.GCP_NETSUITE_KEY_PROD }}
            EOF
            npm install
            serverless deploy

        - name: Configure urd Serverless Project ID
          if: steps.filter.outputs.urd == 'true'
          run: |
            cd ./urd
            cat >> project.yml << EOF
            ${{ secrets.GCP_URD_PROJECTID_PROD }}
            EOF

        - name: Deploy urd to GCF
          if: steps.filter.outputs.urd == 'true'
          run: |
            cd ./urd
            cat >> credentials.json << EOF
            ${{ secrets.GCP_URD_KEY_PROD }}
            EOF
            npm install
            serverless deploy

  deploy-staging:
      environment: staging
      name: Deploy Staging (Develop)
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/develop' # this deploys both to production since they are in staging.
      steps:
        - uses: actions/checkout@v3
        - uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
              urd:
                - 'urd/**'
              netsuite:
                - 'netsuite/**'

        - name: Install Serverless Framework
          run: npm i -g serverless
        
        - name: Install GCP Cloud Functions Serverless Plug-In
          run: serverless plugin install -n serverless-google-cloudfunctions

        - name: Configure GCP Auth
          uses: google-github-actions/auth@v0.7.3
          with:
            credentials_json: ${{secrets.GCP_SA_KEY}} # credentials are inside Github Actions Settings
            service_account: ${{secrets.GCP_SA_EMAIL}}

        - name: Configure Serverless Project ID
          run: |
            cd .
            cat >> project.yml << EOF
            ${{ secrets.GCP_PROJECT_ID }}
            EOF

        - name: Configure netsuite Serverless Project ID
          if: steps.filter.outputs.netsuite == 'true'
          run: |
            cd .
            cat >> project.yml << EOF
            ${{ secrets.GCP_NETSUITE_PROJECTID }}
            EOF

        - name: Deploy netsuite to GCF
          if: steps.filter.outputs.netsuite == 'true'
          run: |
            cd ./netsuite
            cat >> credentials.json << EOF
            ${{ secrets.GCP_SA_KEY }}
            EOF
            sls deploy

        - name: Configure urd Serverless Project ID
          if: steps.filter.outputs.urd == 'true'
          run: |
            cd .
            cat >> project.yml << EOF
            ${{ secrets.GCP_URD_PROJECTID }}
            EOF

        - name: Deploy urd to GCF
          if: steps.filter.outputs.urd == 'true'
          run: |
            cd ./urd
            cat >> credentials.json << EOF
            ${{ secrets.GCP_SA_KEY }}
            EOF
            sls deploy
